@model SavingStudentProject.Models.Student

@{
    ViewBag.Title = "Create";
}

<h2>NEW STUDENT</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Students</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.StudentName , new { @class = "form-control", Placeholder = "Write yourname", Required = "" })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentSurname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StudentSurname, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.StudentSurname, new { @class = "form-control", Placeholder = "Write your surname", Required = "" })
                @Html.ValidationMessageFor(model => model.StudentSurname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentMail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StudentMail, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.StudentMail , new { @class = "form-control", Placeholder = "Write your Mail", Required = "" })
                @Html.ValidationMessageFor(model => model.StudentMail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentPhoto, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StudentPhoto, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.StudentPhoto , new { @class = "form-control", Placeholder = "Copy link"})
                @Html.ValidationMessageFor(model => model.StudentPhoto, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.StudentAddress, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.TextBoxFor(model => model.StudentAddress, new { @class = "form-control", Placeholder = "Write Adress", Required = "" })
                <!-- editorFor olunca css ile düzenleme yapamadık ama textbox olunca yaptık. required alanın zorunlu olduğunu gösterir-->
                @Html.ValidationMessageFor(model => model.StudentAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create New!" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
